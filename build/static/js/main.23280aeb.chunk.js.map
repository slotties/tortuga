{"version":3,"sources":["Navigation.js","Welcome.js","rules/oneLeader.js","rules/validateList.js","NewList.js","data/Characters.js","ManageLists.js","FactionChoice.js","App.js","index.js"],"names":["Navigation","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Component","Welcome","oneLeader","rules","list","filter","character","length","validateList","map","rule","error","NewList","addChar","item","Chars","chars","find","characterById","updatedChars","errors","setChars","setErrors","setErrorsVisible","removeChar","removedIndex","_","index","typeNameOf","typeClassName","toLowerCase","characters","faction","factions","includes","charactersByFaction","useParams","sort","char1","char2","type1","type2","name","localeCompare","indexOf","useState","allChars","errorsVisible","CSSTransition","in","unmountOnExit","timeout","classNames","role","key","TransitionGroup","value","costs","onClick","bind","href","ManageLists","FactionChoice","App","basename","path","ReactDOM","render","document","getElementById"],"mappings":"+szCA8BeA,E,uKAzBX,OACE,6BACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,iCAAf,qBACA,4BAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAAmBC,gBAAc,QAAQC,aAAW,8BACxK,0BAAMN,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BO,GAAG,oBAC3C,wBAAIP,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMQ,GAAG,iBAAiBR,UAAU,6BAApC,uBAEF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMQ,GAAG,SAASR,UAAU,6BAA5B,6B,GAfSS,aCoBVC,MApBf,WACE,OACE,6BACE,yBAAKV,UAAU,OACb,yBAAKA,UAAU,OAAf,4EAIF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMQ,GAAG,iBAAiBR,UAAU,0CAApC,sBACA,kBAAC,IAAD,CAAMQ,GAAG,SAASR,UAAU,0CAA5B,+B,+BCTGW,ICJTC,EAAQ,CDFd,SAAmBC,GAGf,OAFgBA,EAAKC,QAAO,SAACC,GAAD,MAAkC,MAAnBA,EAAUd,QAEtCe,OAAS,EAAI,mCAAkC,OCQnDC,MALf,SAAsBJ,GAClB,OAAOD,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKN,MAC3BC,QAAO,SAACM,GAAD,OAAqB,OAAVA,M,gBCmIZC,MAnIf,WAAoB,IAAD,OAeTC,EAAU,SAACf,GACb,IAAMgB,ECtBd,SAAuBhB,GACnB,OAAOiB,EAAMC,MAAMC,MAAK,SAACH,GACrB,OAAOA,EAAKhB,KAAOA,KDoBNoB,CAAcpB,GAErBqB,EAAY,sBAAOH,GAAP,CAAcF,IAC1BM,EAASZ,EAAaW,GAE5BE,EAASF,GACTG,EAAUF,GACVG,EAAiBH,EAAOb,OAAS,IAG/BiB,EAAa,SAACC,GAChB,IAAMN,EAAeH,EAAMX,QAAO,SAACqB,EAAGC,GAClC,OAAOA,IAAUF,KAGfL,EAASZ,EAAaW,GAE5BE,EAASF,GACTG,EAAUF,GACVG,EAAiBH,EAAOb,OAAS,IAG/BqB,EAAa,SAACpC,GAChB,OAAQA,GACJ,IAAK,IACD,MAAO,cACX,IAAK,IACD,MAAO,aACX,IAAK,IACD,MAAO,UACX,QACI,MAAO,cAIbqC,EAAgB,SAACrC,GACnB,OAAOA,EAAQ,UAAYA,EAAKsC,cAAiB,IAM/CC,EC1DV,SAA6BC,GACzB,OAAOjB,EAAMC,MAAMX,QAAO,SAACS,GACvB,OAAOA,EAAKmB,SAASC,SAASF,MDwDfG,CAHDC,cAAZJ,SAIND,EAAWM,MA1DQ,SAACC,EAAOC,GACvB,IAAMC,EAAQF,EAAM9C,KACdiD,EAAQF,EAAM/C,KAEpB,OAAIgD,IAAUC,EACHH,EAAMI,KAAKC,cAAcJ,EAAMG,MAR/B,MAWeE,QAAQJ,GAXvB,MAYeI,QAAQH,IAER,EAAI,KAZnB,MA6DWI,mBAAS,IA7DpB,mBA6DR7B,EA7DQ,KA6DDK,EA7DC,OA8DiBwB,mBAASd,GA9D1B,mBA8DRe,EA9DQ,aA+DaD,mBAAS,KA/DtB,mBA+DRzB,EA/DQ,KA+DAE,EA/DA,OAgE2BuB,oBAAS,GAhEpC,mBAgERE,EAhEQ,KAgEOxB,EAhEP,KAsEf,OACI,6BACI,yBAAKhC,UAAU,OACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,oBAAd,+BAGR,kBAACyD,EAAA,EAAD,CAAeC,GAAIF,EAAeG,eAAa,EAACC,QAAS,IAAKC,WAAW,SACrE,yBAAK7D,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qBAAqB8D,KAAK,SAAzC,UAEI,4BACKjC,EAAOX,KAAI,SAACE,EAAOgB,GAAR,OACR,wBAAI2B,IAAK3B,GAAQhB,WAOzC,yBAAKpB,UAAU,OACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,cACV,kBAACgE,EAAA,EAAD,KACKvC,EAAMP,KAAI,SAAC+C,EAAO7B,GAAR,OACP,kBAACqB,EAAA,EAAD,CAAeM,IAAK3B,EAAOwB,QAAS,IAAKC,WAAW,YAChD,wBAAI7D,UAAU,qEACV,0BAAMA,UAAU,WAAWiE,EAAMd,MACjC,0BAAMnD,UAAS,yCAAoCsC,EAAc2B,EAAMhE,MAAxD,SAAsEoC,EAAW4B,EAAMhE,OACtG,0BAAMD,UAAU,sCAAsCiE,EAAMC,OAC5D,4BAAQjE,KAAK,SAASD,UAAU,iBAAiBmE,QAASlC,EAAWmC,KAAK,EAAMhC,IAAhF,cAQ5B,yBAAKpC,UAAU,OACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,oBAAd,6BAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACVuD,EAASrC,KAAI,SAAC+C,GAAD,OACV,uBAAGF,IAAKE,EAAM1D,GAAI8D,KAAK,IAAIrE,UAAU,2FAA2FmE,QAAS7C,EAAQ8C,KAAK,EAAMH,EAAM1D,KAC9J,0BAAMP,UAAU,WAAWiE,EAAMd,MACjC,0BAAMnD,UAAS,yCAAoCsC,EAAc2B,EAAMhE,MAAxD,SAAsEoC,EAAW4B,EAAMhE,OACtG,0BAAMD,UAAU,sCAAsCiE,EAAMC,gBErH7EI,E,uKARX,OACE,2D,GAHoB7D,aC8BX8D,MA3Bf,WACI,OACI,6BACI,yBAAKvE,UAAU,OACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,oBAAd,gCAIR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,YACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,gBACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,UACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,kBACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,oBACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,QACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,WACA,kBAAC,IAAD,CAAMQ,GAAG,WAAWR,UAAU,0CAA9B,mBCaTwE,MAzBf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAS,kBACf,yBAAKzE,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0E,KAAK,kBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,iBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,W,wBCfZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.23280aeb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"navbar navbar-expand-lg navbar-light\">\r\n          <div className=\"navbar-brand user-select-none\">Freebooter's Fate</div>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#headerNavigation\" aria-controls=\"headerNavigation\" aria-expanded=\"false\" aria-label=\"Navigation ein-/ausblenden\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"headerNavigation\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/factionChoice\" className=\"nav-link user-select-none\">Neue Liste anlegen</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/lists\" className=\"nav-link user-select-none\">Listen verwalten</Link>\r\n              </li>\r\n            </ul>\r\n        </div>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Welcome() {\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          Wilkommen bei Tortuga, einer Listenverwaltung für Freebooter's Fate!\r\n                </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div className=\"list-group\">\r\n            <Link to=\"/factionChoice\" className=\"list-group-item list-group-item-action\">Neue Liste anlegen</Link>\r\n            <Link to=\"/lists\" className=\"list-group-item list-group-item-action\">Meine Listen verwalten</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;","function oneLeader(list) {\r\n    const leaders = list.filter((character) => character.type === 'A');\r\n\r\n    return leaders.length > 1 ? 'Nur ein Anführer ist erlaubt.' : null;\r\n}\r\n\r\nexport default oneLeader;","import oneLeader from './oneLeader'\r\n\r\nconst rules = [\r\n    oneLeader\r\n];\r\n\r\nfunction validateList(list) {\r\n    return rules.map((rule) => rule(list))\r\n        .filter((error) => error !== null);\r\n}\r\n\r\nexport default validateList;","import React, { Component, useState } from 'react';\r\nimport { characterById, charactersByFaction } from './data/Characters';\r\nimport validateList from './rules/validateList';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport { useLocation, useParams } from 'react-router';\r\n\r\nconst TYPE_ORDER = 'ASG';\r\n\r\nfunction NewList() {\r\n    const sortByType = (char1, char2) => {\r\n        const type1 = char1.type;\r\n        const type2 = char2.type;\r\n\r\n        if (type1 === type2) {\r\n            return char1.name.localeCompare(char2.name);\r\n        }\r\n\r\n        const order1 = TYPE_ORDER.indexOf(type1);\r\n        const order2 = TYPE_ORDER.indexOf(type2);\r\n\r\n        return order1 < order2 ? -1 : 1;\r\n    };\r\n\r\n    const addChar = (id) => {\r\n        const item = characterById(id)\r\n\r\n        const updatedChars = [...chars, item];\r\n        const errors = validateList(updatedChars);\r\n\r\n        setChars(updatedChars);\r\n        setErrors(errors);\r\n        setErrorsVisible(errors.length > 0);\r\n    };\r\n\r\n    const removeChar = (removedIndex) => {\r\n        const updatedChars = chars.filter((_, index) => {\r\n            return index !== removedIndex;\r\n        })\r\n\r\n        const errors = validateList(updatedChars);\r\n\r\n        setChars(updatedChars);\r\n        setErrors(errors);\r\n        setErrorsVisible(errors.length > 0);\r\n    };\r\n\r\n    const typeNameOf = (type) => {\r\n        switch (type) {\r\n            case 'A':\r\n                return 'Anführer';\r\n            case 'S':\r\n                return 'Spezialist';\r\n            case 'G':\r\n                return 'Gefolge';\r\n            default:\r\n                return 'Unbekannt';\r\n        }\r\n    };\r\n\r\n    const typeClassName = (type) => {\r\n        return type ? ('t-type-' + type.toLowerCase()) : '';\r\n    };\r\n\r\n    let { faction } = useParams();\r\n    // TODO: handle faction = null\r\n\r\n    const characters = charactersByFaction(faction)\r\n    characters.sort(sortByType);\r\n\r\n    const [chars, setChars] = useState([]);\r\n    const [allChars, setAllChars] = useState(characters);\r\n    const [errors, setErrors] = useState([]);\r\n    const [errorsVisible, setErrorsVisible] = useState(false);\r\n\r\n    // TODO: sub-komponenten auslagern\r\n    // TODO: meldung wenn keine charaktere ausgewählt sind\r\n    // TODO: farblegende für typen\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h5 className=\"user-select-none\">Ausgewählte Charaktere</h5>\r\n                </div>\r\n            </div>\r\n            <CSSTransition in={errorsVisible} unmountOnExit timeout={250} classNames=\"alert\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"alert alert-danger\" role=\"alert\">\r\n                            Fehler:\r\n                            <ul>\r\n                                {errors.map((error, index) =>\r\n                                    <li key={index}>{error}</li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CSSTransition>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <ul className=\"list-group\">\r\n                        <TransitionGroup>\r\n                            {chars.map((value, index) =>\r\n                                <CSSTransition key={index} timeout={250} classNames=\"listChar\">\r\n                                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                        <span className=\"mr-auto\">{value.name}</span>\r\n                                        <span className={`badge badge-primary badge-pill ${typeClassName(value.type)} m-2`}>{typeNameOf(value.type)}</span>\r\n                                        <span className=\"badge badge-primary badge-pill m-2\">{value.costs}</span>\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={removeChar.bind(this, index)}>X</button>\r\n                                    </li>\r\n                                </CSSTransition>\r\n                            )}\r\n                        </TransitionGroup>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h5 className=\"user-select-none\">Charakter hinzufügen</h5>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"list-group\">\r\n                        {allChars.map((value) =>\r\n                            <a key={value.id} href=\"#\" className=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\" onClick={addChar.bind(this, value.id)}>\r\n                                <span className=\"mr-auto\">{value.name}</span>\r\n                                <span className={`badge badge-primary badge-pill ${typeClassName(value.type)} m-2`}>{typeNameOf(value.type)}</span>\r\n                                <span className=\"badge badge-primary badge-pill m-2\">{value.costs}</span>\r\n                            </a>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewList;","import Chars from './characters_v1.json';\r\n\r\nfunction characterById(id) {\r\n    return Chars.chars.find((item) => {\r\n        return item.id === id\r\n    })\r\n}\r\n\r\nfunction charactersByFaction(faction) {\r\n    return Chars.chars.filter((item) => {\r\n        return item.factions.includes(faction)\r\n    })\r\n}\r\n\r\nexport {\r\n    characterById,\r\n    charactersByFaction\r\n}","import React, { Component } from 'react';\r\n\r\nclass ManageLists extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        TODO: Listen verwalten\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageLists;","import React, { Component } from 'react';\r\nimport { Link, Router } from 'react-router-dom';\r\n\r\nconst TYPE_ORDER = 'ASG';\r\n\r\nfunction FactionChoice() {\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h5 className=\"user-select-none\">Wähle eine Fraktion aus</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"list-group\">\r\n                        <Link to=\"/new/AMA\" className=\"list-group-item list-group-item-action\">Amazonen</Link>\r\n                        <Link to=\"/new/ASS\" className=\"list-group-item list-group-item-action\">Bruderschaft</Link>\r\n                        <Link to=\"/new/DEB\" className=\"list-group-item list-group-item-action\">Debonn</Link>\r\n                        <Link to=\"/new/GOB\" className=\"list-group-item list-group-item-action\">Goblin Piraten</Link>\r\n                        <Link to=\"/new/IMP\" className=\"list-group-item list-group-item-action\">Imperiale Armada</Link>\r\n                        <Link to=\"/new/MYS\" className=\"list-group-item list-group-item-action\">Kult</Link>\r\n                        <Link to=\"/new/PIR\" className=\"list-group-item list-group-item-action\">Piraten</Link>\r\n                        <Link to=\"/new/SOL\" className=\"list-group-item list-group-item-action\">Söldner</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FactionChoice;","import React, { Component } from 'react';\r\nimport Navigation from './Navigation';\r\nimport Welcome from './Welcome';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport NewList from './NewList';\r\nimport ManageLists from './ManageLists';\r\nimport FactionChoice from './FactionChoice';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/tortuga/build\">\r\n      <div className=\"container\">\r\n        <Navigation />\r\n\r\n        <Switch>\r\n          <Route path=\"/factionChoice\">\r\n            <FactionChoice />\r\n          </Route>\r\n          <Route path=\"/new/:faction\">\r\n            <NewList />\r\n          </Route>\r\n          <Route path=\"/lists\">\r\n            <ManageLists />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Welcome />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// Bootstrap stuff\r\n// eslint-disable-next-line\r\nimport $ from 'jquery';\r\n// eslint-disable-next-line\r\nimport Popper from 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './assets/style.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}